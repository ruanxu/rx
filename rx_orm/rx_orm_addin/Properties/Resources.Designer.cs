//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace rx_orm_addin.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("rx_orm_addin.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   使用此强类型资源类，为所有资源查找
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] Newtonsoft_Json {
            get {
                object obj = ResourceManager.GetObject("Newtonsoft_Json", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] rx {
            get {
                object obj = ResourceManager.GetObject("rx", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找类似 /// &lt;reference path=&quot;rx.js&quot; /&gt;
        ////// &lt;reference path=&quot;rx_assembly_config.js&quot; /&gt;
        ///
        /////table_element可以是一个dom对象或者是一个对象的id【必须是一个table】
        ///function rx_table(table_element, setting) {
        ///    if (table_element == undefined || table_element == null) {
        ///        throw &quot;rx_table的参数table_element需要一个table的dom元素或者table的dom元素的id！&quot;;
        ///    }
        ///    else if (typeof (table_element) == &quot;string&quot;) {
        ///        table_element = try_dom_by_id(table_element, false);
        ///        if (table_element == false) {
        ///            throw String.Format(&quot;rx_t [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string rx_assembly {
            get {
                return ResourceManager.GetString("rx_assembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 var rx_assembly_config =
        ///    {
        ///        &quot;class&quot;:
        ///            {
        ///                &quot;default&quot;:
        ///                    {
        ///                        rx_table:
        ///                            {
        ///                                //table的class
        ///                                table: &quot;rx-table&quot;,
        ///                                //table的页码工具的class（本身也是table）
        ///                                page_bar: &quot;rx-table&quot;,
        ///                                //table的页码工具的总行数的span的class
        ///                                row_count: &quot;rx-tabl [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string rx_assembly_config {
            get {
                return ResourceManager.GetString("rx_assembly_config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 //C#_____String
        ///String.Format = function (text) {
        ///    for (var i = 1; i &lt; arguments.length; i++) {
        ///        text = text.replace(&quot;{&quot; + (i - 1) + &quot;}&quot;, arguments[i]);
        ///    }
        ///    return text;
        ///}
        ///
        ///String.IsNullOrEmpty = function (text) {
        ///    return (text == null || text == &quot;&quot;) ? true : false;
        ///}
        ///
        ///String.IsNullOrWhiteSpace = function (text) {
        ///    return (text == null || text.trim() == &quot;&quot;) ? true : false;
        ///}
        ///
        ///String.Join = function (separator, list) {
        ///    var str = &quot;&quot;;
        ///    var index = 0;
        ///    for (var [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string rx_csharp {
            get {
                return ResourceManager.GetString("rx_csharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 //----------rx javascript----------
        /////edition：1.0.0.0 
        /////work begin date：2018-02-03
        /////作者：阮旭
        ///
        /////ajax方法 与JQuery的ajax方法基本一致
        ///function ajax(options) {
        ///    options = options || {};
        ///    options.type = (options.type || &quot;GET&quot;).toUpperCase();
        ///    options.data_type = (options.data_type || &quot;auto&quot;).toLowerCase();
        ///    options.data = options.data || {};
        ///    var params = ajax.format_params(options.data);
        ///    var xhr;
        ///
        ///    //创建 - 第一步
        ///    if (window.XMLHttpRequest) {
        ///        xhr = new XMLHttpRequest();
        ///    } [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string rx_js {
            get {
                return ResourceManager.GetString("rx_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /// &lt;reference path=&quot;rx.js&quot; /&gt;
        /////服务器项目类型枚举
        ///var server_project_type = {
        ///    asp_net_handle: &quot;asp_net_handle&quot;,
        ///    asp_net_web_form: &quot;asp_net_web_form&quot;,
        ///    asp_net_mvc: &quot;asp_net_mvc&quot;,
        ///    asp_net_mvc_api: &quot;asp_net_mvc_api&quot;
        ///};
        ///
        ////*前端rx_maager，与后端rx_manager一
        /// * 所有回调函数call_back的参数都是data与xml
        ///*/
        ///var rx_manager = {
        ///    /*-----------------------------配置begin*/
        ///    /*服务接口地址需要在使用前或者使用中进行配置
        ///    * asp.net mvc项目server_url要指定继承rx_mvc_controller的控制器的地址
        ///    * asp.net mvc api项目server_url要指定继承rx_mvc_api_contro [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string rx_manager {
            get {
                return ResourceManager.GetString("rx_manager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;doc&gt;
        ///    &lt;assembly&gt;
        ///        &lt;name&gt;rx&lt;/name&gt;
        ///    &lt;/assembly&gt;
        ///    &lt;members&gt;
        ///        &lt;member name=&quot;T:rx.dml_result&quot;&gt;
        ///            &lt;summary&gt;
        ///            dml操作的结果类型
        ///            &lt;/summary&gt;
        ///        &lt;/member&gt;
        ///        &lt;member name=&quot;M:rx.dml_result.#ctor(System.String,rx.dml_command_type)&quot;&gt;
        ///            &lt;summary&gt;
        ///            实例化一个dml操作结果对象
        ///            &lt;/summary&gt;
        ///            &lt;param name=&quot;entity_name&quot;&gt;实体名称&lt;/param&gt;
        ///            &lt;param name=&quot;result_type&quot;&gt;dml操作结果类型&lt;/param&gt;
        ///        &lt;/me [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string rx_xml {
            get {
                return ResourceManager.GetString("rx_xml", resourceCulture);
            }
        }
    }
}
